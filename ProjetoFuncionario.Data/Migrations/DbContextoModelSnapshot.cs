// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFuncionario.Data.Context;

#nullable disable

namespace ProjetoFuncionario.Data.Migrations
{
    [DbContext(typeof(DbContexto))]
    partial class DbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjetoFuncionario.Dominio.Dominio.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ativo")
                        .HasColumnType("INT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(11)");

                    b.Property<string>("EmailCorporativo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Emnpresa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(40)");

                    b.HasKey("Id");

                    b.ToTable("tb_Funcionario", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
